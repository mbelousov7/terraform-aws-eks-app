# -- Provide a name in place of `kutt`
nameOverride: ""

# -- String to fully override `"kutt.fullname"`
fullnameOverride: ""

image:
  # -- image repository
  repository: ${image.repository} #kutt/kutt
  # -- image pull policy
  pullPolicy: ${image.pullPolicy} #IfNotPresent
  # -- Overrides the image tag
  tag: ${image.tag} #"v2.7.4"

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
imagePullSecrets: []

# -- Number of replicas
replicaCount: ${replicaCount}

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 10

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to be added to exporter pods
podAnnotations: {}

# -- pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

# -- container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 80

ingress:
  # -- Enable ingress record generation
  enabled: ${ingress.enabled}
  # -- IngressClass that will be be used to implement the Ingress
  className: "${ingress.className}"
  # -- Additional annotations for the Ingress resource
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- An array with the hosts configuration
  # @default -- see [values.yaml](./values.yaml)
  hosts:
    - host: "${ingress.host}"
      paths:
        - path: ${ingress.path}
          pathType: ImplementationSpecific
  # -- An array with the tls configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests for the pods.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Enable Horizontal POD autoscaling
  enabled: ${autoscaling.enabled}
  # -- Minimum number of replicas
  minReplicas: 1
  # -- Maximum number of replicas
  maxReplicas: 100
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # -- Target Memory utilization percentage
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector:
%{ for node in node_selector ~}
    ${node}
%{ endfor ~}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

# -- additional environment variables to be added to the pods
extraEnv: []
  # - name: FOO
  #   value: BAR

kutt:
  admin:
    # -- Comma seperated list of email addresses that can access admin actions on settings page
    emails: "${kutt.admin}"
  config:
    # -- Max number of visits for each link to have detailed stats
    defaultMaxStatsPerLink: "5000"
    # -- Disable anonymous link creation
    disallowAnonymousLinks: false
    # -- Disable registration
    disallowRegistration: false
    # -- Generated link length
    linkLength: 6
    # -- Create a cooldown for non-logged in users in minutes. Set 0 to disable.
    nonUserCooldown: 0
    # -- The name of the site where Kutt is hosted
    siteName: "Kutt"
    # -- The daily limit for each user
    userLimitPerDay: 50
  domain:
    # -- Use HTTPS for links with custom domain
    customDomainUseHttps: ${domain.customDomainUseHttps}
    # -- The domain that this website is on
    defaultDomain: "${domain.defaultDomain}"
    # -- If you use an ingress to expose Kutt you can simply set this to true to use the first hostname defined in the ingress.
    useFirstIngressHost: ${domain.useFirstIngressHost}
  google:
    # -- Use existing secret for Google configuration. The secret has to contain the key `GOOGLE_SAFE_BROWSING_KEY`. When it's set the `kutt.google.safeBrowsingKey` is ignored.
    existingSecret: ""
    # -- Google Cloud API to prevent from users from submitting malware URLs. Get it from https://developers.google.com/safe-browsing/v4/get-started.
    safeBrowsingKey: ""
  jwt:
    # -- Use existing secret for JWT secret key. The secret has to contain the key `JWT_SECRET`. When it's set the kutt.jwt.key is ignored.
    existingSecret: ""
    # -- make sure to replace with your own secret key
    key: "secret-jwt-key"
  mail:
    # -- Support email to show on the app
    contactEmail: "${kutt.admin}"
    # -- Use existing secret for password details. The secret has to contain the key `MAIL_PASSWORD`. When it's set the `kutt.mail.password` is ignored.
    existingSecret: ""
    # -- The email address Kutt will send emails from.
    from: "${mail.from}"
    # -- The host of the external SMTP server that Kutt should use to send emails.
    host: "${mail.host}"
    # -- The password to authenticate to the smtp host when sending emails.
    password: "{mail.password}"
    # -- The port used to connect to the smtp host.
    port: ${mail.port}
    # -- The email address that will receive submitted reports.
    reportEmail: ""
    # -- If true the connection will use TLS when connecting to server. If false (the default) then TLS is used if server supports the STARTTLS extension. In most cases set this value to true if you are connecting to port 465. For port 587 or 25 keep it false
    secure: false
    # -- The username to authenticate to the smtp host when sending emails.
    username: "${mail.username}"
  recaptcha:
    # -- Use existing secret for ReCaptacha secrets. The secret has to contain the keys `RECAPTCHA_SITE_KEY` and `RECAPTCHA_SECRET_KEY`. When it's set the kutt.recaptcha.siteKey and kutt.recaptcha.secretKey is ignored.
    existingSecret: ""
    # -- Invisible reCaptcha site key. Create one in https://www.google.com/recaptcha/intro/
    siteKey: ""
    # -- Invisible reCaptcha secret key. Create one in https://www.google.com/recaptcha/intro/
    secretKey: ""

postgresql:
  # -- enable PostgreSQL™ subchart from Bitnami
  enabled: ${postgresql.enabled}
  auth:
    # -- Name for a custom database to create
    database: kutt
    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: ""
    # -- Password for the custom user to create. Ignored if postgresql.auth.existingSecret is provided
    password: kutt
    # -- Name for a custom user to create
    username: kutt


externalPostgresql:
  auth:
    # -- Name of the database to use
    database: ${externalPostgresql.auth.database}
    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: "${externalPostgresql.auth.existingSecret}"
    # -- Password to use
    password: ${externalPostgresql.auth.password}
    # -- Name of the user to use
    username: ${externalPostgresql.auth.username}
    # -- Key in the secret containing the password
    userPasswordKey: "${externalPostgresql.auth.userPasswordKey}"
  # -- Hostname of the PostgreSQL database
  hostname: "${externalPostgresql.hostname}"
  # -- Port used to connect to PostgreSQL database
  port: ${externalPostgresql.port}

redis:
  # -- enable Redis™ subchart from Bitnami
  enabled: ${redis.enabled}
  # -- Redis® architecture. Allowed values: standalone or replication
  architecture: ${redis.architecture}
  auth:
    # -- Enable password authentication
    enabled: true
    # -- Redis™ password
    password: kutt

externalRedis:
  auth:
    # -- if authentication should be used with external Redis™
    enabled: false
    # -- Name of existing secret to use for Redis™ credentials
    existingSecret: ""
    # -- Password to use
    password: ""
    # -- Key in the secret containing the password
    userPasswordKey: ""
  # -- Hostname of Redis™
  hostname: ""
  # -- Port used to connect to Redis
  port: 6379
